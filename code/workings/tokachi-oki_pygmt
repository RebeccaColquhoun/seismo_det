#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Jul 21 17:39:38 2021

@author: rebecca
"""

import pygmt
import numpy as np

lats = [42.1306, 42.0170, 41.9370, 42.1287, 41.78]

lons = [142.9353, 143.1487, 143.2403, 143.3153, 144.08]

names = ['HKD110', 'HKD111', 'HKD112', 'HKD113', 'eq']

# Convert lons from (-180, 180) to (0, 360)
lons = np.array(lons) % 360

# Determine a nice, padded region
region = [np.min(lons), np.max(lons), np.min(lats), np.max(lats)]
x_pad = (region[1] - region[0]) * 0.1
y_pad = (region[3] - region[2]) * 0.1
region = [region[0] - x_pad, region[1] + x_pad, region[2] - y_pad, region[3] + y_pad]

# Determine a nice stereographic projection
lon_0 = np.mean(region[:2])
lat_0 = np.mean(region[2:])
ref_lat = 90 if lat_0 > 0 else -90
projection = f'S{lon_0}/{ref_lat}/6i'

# Create figure
fig = pygmt.Figure()
fig.coast(
    region=region,
    projection=projection,
    shorelines=True,
    water='lightblue',
    land='lightgrey',
    borders=[1, 2],
    frame='a'
)

fig.basemap(map_scale="JTR+c1+w10k+f+l")
fig.plot(lons[:-1], lats[:-1], style='t0.2i', color='red', pen=True)
fig.plot(lons[-1], lats[-1], style='a0.2i', color='blue', pen=True)

# Middle: plot 7 math angle arcs with different radii
num = 7
x = lons[-1]  # x coordinates of the center
y = lats[-1]  # y coordinates of the center
radius = 1i  # radius
startdir = 0  # start direction in degrees
stopdir = 360  # stop direction in degrees
# data for circular vectors
data = np.column_stack([x, y, radius, startdir, stopdir])
arcstyle = "m0.5c+ea"  # Circular vector (m) with an arrow at end
fig.plot(data=data, style=arcstyle, color="red3", pen="1.5p,black")
fig.text(text="CIRCULAR", x=-95, y=44.2, font="13p,Helvetica-Bold,black", fill="white")



label_padding_y = 0.4 * (region[3] - region[2])/6  # scale padding to scale of map
label_padding_x = 0.4 * (region[1] - region[0])/6
fig.text(text=names, x=np.array(lons), y=np.array(lats)+label_padding_y)

